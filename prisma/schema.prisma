// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator jsonSchema {
  provider                 = "prisma-json-schema-generator"
  includeRequiredFields    = "true"
  keepRelationScalarFields = "true"
  output                   = "./"
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  firstName    String
  lastName     String
  passwordHash String
  createdAt    DateTime @default(now())
  udpatedAt    DateTime @updatedAt

  sessions    Session[]
  employments Employee[]
  companies   Company[]
}

model Session {
  id        String   @id @default(uuid())
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Company {
  id          String   @id @default(uuid())
  name        String   @unique
  domain      String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  owner       User          @relation(fields: [ownerId], references: [id])
  ownerId     String
  employees   Employee[]
  projects    Project[]
  permissions Permissions[]
}

model Employee {
  id        String       @id @default(uuid())
  type      EmployeeType @default(Normal)
  phone     String?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  user        User         @relation(fields: [userId], references: [id])
  userId      String
  company     Company      @relation(fields: [companyId], references: [id])
  companyId   String
  permissions Permissions?
  projects    Project[]
}

model Permissions {
  accessToCMS Boolean

  company    Company  @relation(fields: [companyId], references: [id])
  companyId  String
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String   @unique

  @@id(fields: [companyId, employeeId])
}

model Project {
  id          String    @id @default(uuid())
  name        String
  description String?
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  company   Company    @relation(fields: [companyId], references: [id])
  companyId String
  members   Employee[]

  @@unique([companyId, name])
}

enum EmployeeType {
  Normal
  Cooperation
  Intern
}
